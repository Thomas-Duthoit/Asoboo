#ifndef ICONS_H
#define ICONS_H

#define ICON_DATA 0
#define _ICON_DATA { \
0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0x0000,0x0000,0x0000\
,0xFFFF,0x0000,0x0000,0x0000,0x0000,0xFFFF,0x0000,0x0000\
,0xFFFF,0x0000,0x0000,0x0000,0x0000,0x0000,0xFFFF,0x0000\
,0xFFFF,0x0000,0xFFFF,0xFFFF,0xFFFF,0x0000,0xFFFF,0x0000\
,0xFFFF,0x0000,0x0000,0x0000,0x0000,0x0000,0xFFFF,0x0000\
,0xFFFF,0x0000,0xFFFF,0xFFFF,0xFFFF,0x0000,0xFFFF,0x0000\
,0xFFFF,0x0000,0x0000,0x0000,0x0000,0x0000,0xFFFF,0x0000\
,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0x0000\
}


#define ICON_ERROR 1
#define _ICON_ERROR { \
0x0000,0x0000,0xF800,0xF800,0xF800,0xF800,0x0000,0x0000\
,0x0000,0xF800,0x9882,0x9882,0x9882,0x9882,0xF800,0x0000\
,0xF800,0x9882,0xF800,0x0000,0x0000,0xF800,0x9882,0xF800\
,0xF800,0x0000,0x9882,0xF800,0xF800,0x9882,0x0000,0xF800\
,0xF800,0x0000,0x0000,0xF800,0xF800,0x0000,0x0000,0xF800\
,0xF800,0x0000,0xF800,0x9882,0x9882,0xF800,0x0000,0xF800\
,0x9882,0xF800,0x9882,0x0000,0x0000,0x9882,0xF800,0x9882\
,0x0000,0x9882,0xF800,0xF800,0xF800,0xF800,0x9882,0x0000\
}


#define ICON_SETTINGS 2
#define _ICON_SETTINGS { \
0x0000,0x0000,0xFFFF,0x0000,0x0000,0xFFFF,0x0000,0x0000\
,0x0000,0x0000,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0x0000,0x0000\
,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF\
,0x0000,0xFFFF,0xFFFF,0x0000,0x0000,0xFFFF,0xFFFF,0x0000\
,0x0000,0xFFFF,0xFFFF,0x0000,0x0000,0xFFFF,0xFFFF,0x0000\
,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0xFFFF\
,0x0000,0x0000,0xFFFF,0xFFFF,0xFFFF,0xFFFF,0x0000,0x0000\
,0x0000,0x0000,0xFFFF,0x0000,0x0000,0xFFFF,0x0000,0x0000\
}


#include "graph.h"
void render_icon (uint16_t x, uint16_t y, const int icon) {
switch (icon) {

case 0: uint16_t img0[8*8] = _ICON_DATA; g_draw_buffer(x, y, 8, 8, img0); return;

case 1: uint16_t img1[8*8] = _ICON_ERROR; g_draw_buffer(x, y, 8, 8, img1); return;

case 2: uint16_t img2[8*8] = _ICON_SETTINGS; g_draw_buffer(x, y, 8, 8, img2); return;
default: return;}
}
#endif